name: Deploy Service

on:
  workflow_call:
    inputs:
      IMAGE:
        required: true
        type: string
      APP_NAME:
        required: true
        type: string
      APP_CONFIG:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string
      REGION:
        required: true
        type: string
    secrets:
      ROLE_TO_ASSUME:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ inputs.REGION }}

      - name: Get task definition
        env:
          ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
          APP_NAME: ${{ inputs.APP_NAME }}
          APP_CONFIG: ${{ inputs.APP_CONFIG }}
        run: |
          TASK_DEFINITION="$ENVIRONMENT-$APP_NAME-$APP_CONFIG-task"
          aws ecs describe-task-definition --task-definition $TASK_DEFINITION --query taskDefinition > $APP_NAME-$APP_CONFIG-task-definition.json

      - name: Update task definition
        id: update-task
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ inputs.APP_NAME }}-${{ inputs.APP_CONFIG }}-task-definition.json
          container-name: ${{ inputs.APP_NAME }}-${{ inputs.APP_CONFIG }}
          image: ${{ inputs.IMAGE }}

      - name: Deploy to environment
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.update-task.outputs.task-definition }}
          service: ${{ inputs.APP_NAME }}-${{ inputs.APP_CONFIG }}
          cluster: ${{ inputs.ENVIRONMENT }}
          wait-for-service-stability: true
